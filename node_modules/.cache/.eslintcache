[{"G:\\TURING\\frontend\\src\\index.js":"1","G:\\TURING\\frontend\\src\\App.js":"2","G:\\TURING\\frontend\\src\\reportWebVitals.js":"3","G:\\TURING\\frontend\\src\\Components\\Upload_and_show_data.js":"4","G:\\TURING\\frontend\\src\\Components\\Data.js":"5","G:\\TURING\\frontend\\src\\Components\\IndividualData.js":"6"},{"size":535,"mtime":1669784557899,"results":"7","hashOfConfig":"8"},{"size":296,"mtime":1669787494800,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1669784557920,"results":"10","hashOfConfig":"8"},{"size":6610,"mtime":1669891181187,"results":"11","hashOfConfig":"8"},{"size":1112,"mtime":1669875198834,"results":"12","hashOfConfig":"8"},{"size":569,"mtime":1669870863588,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"19vf6n0",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"G:\\TURING\\frontend\\src\\index.js",[],[],[],"G:\\TURING\\frontend\\src\\App.js",["35","36"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react';\nimport './App.css';\nimport Upload_and_show_data from './Components/Upload_and_show_data';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n     <Upload_and_show_data />\n    </div>\n  );\n}\n\nexport default App;\n","G:\\TURING\\frontend\\src\\reportWebVitals.js",[],[],"G:\\TURING\\frontend\\src\\Components\\Upload_and_show_data.js",["37","38","39","40"],[],"// import React, { useState } from 'react'\r\n// import { Button, Col, Container, Row, Table } from 'reactstrap'\r\n// import {Data} from './Data'\r\n// import * as XLSX from 'xlsx'\r\n\r\n\r\n// function Upload_and_show_data() {\r\n//   const [data, setData] = useState(null);\r\n\r\n//   const [file, setFile] = useState(null);\r\n//   const [fileError, setfileError] = useState(null);\r\n\r\n//   // console.log(file);\r\n//   const fileType = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet']\r\n//   //handle file\r\n//   const handleFile = (e) => { \r\n//     let selectedFile = e.target.files[0];\r\n\r\n//     if(selectedFile) {\r\n//       // console.log(selectedFile.type);\r\n//       if(selectedFile && fileType.includes(selectedFile.type)){\r\n//         let reader  = new FileReader();\r\n//         reader.readAsArrayBuffer(selectedFile);\r\n//         reader.onload=(e)=>{\r\n//           setfileError(null);\r\n//           setFile(e.target.result);\r\n//         }\r\n//       }else{\r\n//         setfileError('Please select correct file format');\r\n//         setFile(null);\r\n//       }\r\n//     }else{\r\n//       console.log(\"file not selected\");\r\n//     }\r\n//    }\r\n\r\n//    const handleSubmit = (e) => { \r\n//       e.preventDefault();\r\n//       if(file !== null){\r\n//         const workBook  = XLSX.read(file, {type: 'buffer'});\r\n//         const workSheetName = workBook.SheetNames[0];\r\n//         const workSheet = workBook.Sheets[workSheetName];\r\n//         const workSheetData = XLSX.utils.sheet_to_json(workSheet);\r\n//         setData(workSheetData);\r\n//       }else{\r\n//         setData(null);\r\n//       }\r\n//     }\r\n//   return (\r\n//     <div className='container'>\r\n//       <div className='form'>\r\n//       <form className='form-group' autoComplete='off' onSubmit={handleSubmit}>\r\n//         <label><h5>\r\n//           Upload Excel file\r\n//         </h5>\r\n//         <br/>\r\n//         <input type = \"file\" className='form-control' required onChange={handleFile}></input>\r\n//         {fileError && <div className='text-danger'>Please Select Correct File Format</div>}\r\n//         <Button color=\"primary\" type = 'submit'>\r\n//           Upload data!!\r\n//         </Button>\r\n//         </label>\r\n        \r\n        \r\n//       </form>\r\n//       </div>\r\n\r\n//       <Container fluid>\r\n//         <Row>\r\n//           <Col>\r\n//           {data === null  && <>No File Selected</>}\r\n//           {data !== null && (\r\n//             <Table className = 'table-bordered' responsive bordered>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>S. No</th>\r\n//                 <th>Marks</th>\r\n//                 <th>Name</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               <Data data = {data}/>\r\n//             </tbody>\r\n//           </Table>\r\n//           )}\r\n//           </Col>\r\n//         </Row>\r\n//       </Container>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Upload_and_show_data\r\n\r\nimport {useState} from 'react'\r\nimport { Button, Col, Container, Row, Table } from 'reactstrap'\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport {Data} from './Data'\r\nimport * as XLSX from 'xlsx'\r\n\r\nfunction Upload_and_show_data() {\r\n  \r\n  // on change states\r\n  const [excelFile, setExcelFile]=useState(null);\r\n  const [excelFileError, setExcelFileError]=useState(null);  \r\n \r\n  // submit\r\n  const [excelData, setExcelData]=useState(null);\r\n  // it will contain array of objects\r\n\r\n  // handle File\r\n  const fileType=['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel', 'text/csv', 'application/json'];\r\n  // console.log();\r\n  const handleFile = (e)=>{\r\n    let selectedFile = e.target.files[0];\r\n    if(selectedFile){\r\n      console.log(selectedFile.type);\r\n      if(selectedFile&&fileType.includes(selectedFile.type)){\r\n        let reader = new FileReader();\r\n        reader.readAsArrayBuffer(selectedFile);\r\n        reader.onload=(e)=>{\r\n          setExcelFileError(null);\r\n          setExcelFile(e.target.result);\r\n        } \r\n      }\r\n      else{\r\n        setExcelFileError('Please select only excel file types');\r\n        setExcelFile(null);\r\n      }\r\n    }\r\n    else{\r\n      console.log('plz select your file');\r\n    }\r\n  }\r\n\r\n  // submit function\r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    if(excelFile!==null){\r\n      const workbook = XLSX.read(excelFile,{type:'buffer'});\r\n      const worksheetName = workbook.SheetNames[0];\r\n      const worksheet=workbook.Sheets[worksheetName];\r\n      const data = XLSX.utils.sheet_to_json(worksheet);\r\n      setExcelData(data);\r\n    }\r\n    else{\r\n      setExcelData(null);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n\r\n      {/* upload file section */}\r\n      <div className='form'>\r\n        <form className='form-group' autoComplete=\"off\"\r\n        onSubmit={handleSubmit}>\r\n          <label><h5>Upload Excel file</h5></label>\r\n          <br></br>\r\n          <input type='file' className='form-control'\r\n          onChange={handleFile} required></input>                  \r\n          {excelFileError&&<div className='text-danger'\r\n          style={{marginTop:5+'px'}}>{excelFileError}</div>}\r\n          <button type='submit' className='btn btn-success'\r\n          style={{marginTop:5+'px'}}>Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n      <br></br>\r\n      <hr></hr>\r\n\r\n      {/* view file section */}\r\n      <h5>View Excel file</h5>\r\n      <div className='viewer'>\r\n        {excelData===null&&<>No file selected</>}\r\n        {excelData!==null&&(\r\n          <div className='table-responsive'>\r\n            <Table className = 'table-bordered' responsive bordered>\r\n              <thead>\r\n                <tr>\r\n                  <th scope='col'>ID</th>\r\n                  <th scope='col'>Name</th>\r\n                  <th scope='col'>Marks</th>               \r\n                </tr>\r\n              </thead>\r\n              \r\n                <Data excelData={excelData}/>\r\n              \r\n              \r\n            </Table>   \r\n\r\n            <Pagination>\r\n<Pagination.First />\r\n<Pagination.Prev />\r\n<Pagination.Item>{1}</Pagination.Item>\r\n<Pagination.Ellipsis />\r\n\r\n<Pagination.Item>{10}</Pagination.Item>\r\n<Pagination.Item>{11}</Pagination.Item>\r\n<Pagination.Item active>{12}</Pagination.Item>\r\n<Pagination.Item>{13}</Pagination.Item>\r\n<Pagination.Item disabled>{14}</Pagination.Item>\r\n\r\n<Pagination.Ellipsis />\r\n<Pagination.Item>{20}</Pagination.Item>\r\n<Pagination.Next />\r\n<Pagination.Last />\r\n</Pagination>         \r\n          </div>\r\n        )}       \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload_and_show_data;","G:\\TURING\\frontend\\src\\Components\\Data.js",["41","42"],[],"G:\\TURING\\frontend\\src\\Components\\IndividualData.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":2,"column":10,"nodeType":"45","messageId":"46","endLine":2,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":10,"column":6,"nodeType":"49","messageId":"50","endLine":10,"endColumn":30},{"ruleId":"43","severity":1,"message":"51","line":96,"column":10,"nodeType":"45","messageId":"46","endLine":96,"endColumn":16},{"ruleId":"43","severity":1,"message":"52","line":96,"column":18,"nodeType":"45","messageId":"46","endLine":96,"endColumn":21},{"ruleId":"43","severity":1,"message":"53","line":96,"column":23,"nodeType":"45","messageId":"46","endLine":96,"endColumn":32},{"ruleId":"43","severity":1,"message":"54","line":96,"column":34,"nodeType":"45","messageId":"46","endLine":96,"endColumn":37},{"ruleId":"43","severity":1,"message":"44","line":12,"column":17,"nodeType":"45","messageId":"46","endLine":12,"endColumn":25},{"ruleId":"43","severity":1,"message":"55","line":13,"column":8,"nodeType":"45","messageId":"46","endLine":13,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Upload_and_show_data must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'Button' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Pagination' is defined but never used."]